// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// compare_points
int compare_points(NumericVector x1, NumericVector x2);
RcppExport SEXP _DuelingOptimization_compare_points(SEXP x1SEXP, SEXP x2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x1(x1SEXP);
    Rcpp::traits::input_parameter< NumericVector >::type x2(x2SEXP);
    rcpp_result_gen = Rcpp::wrap(compare_points(x1, x2));
    return rcpp_result_gen;
END_RCPP
}
// signRecovery
int signRecovery(NumericVector x, NumericVector y, double delta);
RcppExport SEXP _DuelingOptimization_signRecovery(SEXP xSEXP, SEXP ySEXP, SEXP deltaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type y(ySEXP);
    Rcpp::traits::input_parameter< double >::type delta(deltaSEXP);
    rcpp_result_gen = Rcpp::wrap(signRecovery(x, y, delta));
    return rcpp_result_gen;
END_RCPP
}
// f1_value
double f1_value(NumericVector x);
RcppExport SEXP _DuelingOptimization_f1_value(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(f1_value(x));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_DuelingOptimization_compare_points", (DL_FUNC) &_DuelingOptimization_compare_points, 2},
    {"_DuelingOptimization_signRecovery", (DL_FUNC) &_DuelingOptimization_signRecovery, 3},
    {"_DuelingOptimization_f1_value", (DL_FUNC) &_DuelingOptimization_f1_value, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_DuelingOptimization(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
